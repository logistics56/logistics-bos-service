<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.module.bos.mapper.TWorkBillMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.module.bos.model.TWorkBill" >
    <id column="C_ID" property="cId" jdbcType="INTEGER" />
    <result column="C_ATTACHBILLTIMES" property="cAttachbilltimes" jdbcType="INTEGER" />
    <result column="C_BUILDTIME" property="cBuildtime" jdbcType="TIMESTAMP" />
    <result column="C_PICKSTATE" property="cPickstate" jdbcType="VARCHAR" />
    <result column="C_REMARK" property="cRemark" jdbcType="VARCHAR" />
    <result column="C_SMSNUMBER" property="cSmsnumber" jdbcType="VARCHAR" />
    <result column="C_TYPE" property="cType" jdbcType="VARCHAR" />
    <result column="C_COURIER" property="cCourier" jdbcType="INTEGER" />
    <result column="C_ORDER_ID" property="cOrderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    C_ID, C_ATTACHBILLTIMES, C_BUILDTIME, C_PICKSTATE, C_REMARK, C_SMSNUMBER, C_TYPE, 
    C_COURIER, C_ORDER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.module.bos.model.TWorkBillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_work_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_work_bill
    where C_ID = #{cId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.logistics.module.bos.model.TWorkBill" >
    insert into t_work_bill (C_ID, C_ATTACHBILLTIMES, C_BUILDTIME, 
      C_PICKSTATE, C_REMARK, C_SMSNUMBER, 
      C_TYPE, C_COURIER, C_ORDER_ID
      )
    values (#{cId,jdbcType=INTEGER}, #{cAttachbilltimes,jdbcType=INTEGER}, #{cBuildtime,jdbcType=TIMESTAMP}, 
      #{cPickstate,jdbcType=VARCHAR}, #{cRemark,jdbcType=VARCHAR}, #{cSmsnumber,jdbcType=VARCHAR}, 
      #{cType,jdbcType=VARCHAR}, #{cCourier,jdbcType=INTEGER}, #{cOrderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.module.bos.model.TWorkBill" >
    insert into t_work_bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        C_ID,
      </if>
      <if test="cAttachbilltimes != null" >
        C_ATTACHBILLTIMES,
      </if>
      <if test="cBuildtime != null" >
        C_BUILDTIME,
      </if>
      <if test="cPickstate != null" >
        C_PICKSTATE,
      </if>
      <if test="cRemark != null" >
        C_REMARK,
      </if>
      <if test="cSmsnumber != null" >
        C_SMSNUMBER,
      </if>
      <if test="cType != null" >
        C_TYPE,
      </if>
      <if test="cCourier != null" >
        C_COURIER,
      </if>
      <if test="cOrderId != null" >
        C_ORDER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="cAttachbilltimes != null" >
        #{cAttachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="cBuildtime != null" >
        #{cBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cPickstate != null" >
        #{cPickstate,jdbcType=VARCHAR},
      </if>
      <if test="cRemark != null" >
        #{cRemark,jdbcType=VARCHAR},
      </if>
      <if test="cSmsnumber != null" >
        #{cSmsnumber,jdbcType=VARCHAR},
      </if>
      <if test="cType != null" >
        #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cCourier != null" >
        #{cCourier,jdbcType=INTEGER},
      </if>
      <if test="cOrderId != null" >
        #{cOrderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.module.bos.model.TWorkBillExample" resultType="java.lang.Integer" >
    select count(*) from t_work_bill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_work_bill
    <set >
      <if test="record.cId != null" >
        C_ID = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.cAttachbilltimes != null" >
        C_ATTACHBILLTIMES = #{record.cAttachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="record.cBuildtime != null" >
        C_BUILDTIME = #{record.cBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cPickstate != null" >
        C_PICKSTATE = #{record.cPickstate,jdbcType=VARCHAR},
      </if>
      <if test="record.cRemark != null" >
        C_REMARK = #{record.cRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.cSmsnumber != null" >
        C_SMSNUMBER = #{record.cSmsnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cType != null" >
        C_TYPE = #{record.cType,jdbcType=VARCHAR},
      </if>
      <if test="record.cCourier != null" >
        C_COURIER = #{record.cCourier,jdbcType=INTEGER},
      </if>
      <if test="record.cOrderId != null" >
        C_ORDER_ID = #{record.cOrderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_work_bill
    set C_ID = #{record.cId,jdbcType=INTEGER},
      C_ATTACHBILLTIMES = #{record.cAttachbilltimes,jdbcType=INTEGER},
      C_BUILDTIME = #{record.cBuildtime,jdbcType=TIMESTAMP},
      C_PICKSTATE = #{record.cPickstate,jdbcType=VARCHAR},
      C_REMARK = #{record.cRemark,jdbcType=VARCHAR},
      C_SMSNUMBER = #{record.cSmsnumber,jdbcType=VARCHAR},
      C_TYPE = #{record.cType,jdbcType=VARCHAR},
      C_COURIER = #{record.cCourier,jdbcType=INTEGER},
      C_ORDER_ID = #{record.cOrderId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.module.bos.model.TWorkBill" >
    update t_work_bill
    <set >
      <if test="cAttachbilltimes != null" >
        C_ATTACHBILLTIMES = #{cAttachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="cBuildtime != null" >
        C_BUILDTIME = #{cBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="cPickstate != null" >
        C_PICKSTATE = #{cPickstate,jdbcType=VARCHAR},
      </if>
      <if test="cRemark != null" >
        C_REMARK = #{cRemark,jdbcType=VARCHAR},
      </if>
      <if test="cSmsnumber != null" >
        C_SMSNUMBER = #{cSmsnumber,jdbcType=VARCHAR},
      </if>
      <if test="cType != null" >
        C_TYPE = #{cType,jdbcType=VARCHAR},
      </if>
      <if test="cCourier != null" >
        C_COURIER = #{cCourier,jdbcType=INTEGER},
      </if>
      <if test="cOrderId != null" >
        C_ORDER_ID = #{cOrderId,jdbcType=INTEGER},
      </if>
    </set>
    where C_ID = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.module.bos.model.TWorkBill" >
    update t_work_bill
    set C_ATTACHBILLTIMES = #{cAttachbilltimes,jdbcType=INTEGER},
      C_BUILDTIME = #{cBuildtime,jdbcType=TIMESTAMP},
      C_PICKSTATE = #{cPickstate,jdbcType=VARCHAR},
      C_REMARK = #{cRemark,jdbcType=VARCHAR},
      C_SMSNUMBER = #{cSmsnumber,jdbcType=VARCHAR},
      C_TYPE = #{cType,jdbcType=VARCHAR},
      C_COURIER = #{cCourier,jdbcType=INTEGER},
      C_ORDER_ID = #{cOrderId,jdbcType=INTEGER}
    where C_ID = #{cId,jdbcType=INTEGER}
  </update>
</mapper>